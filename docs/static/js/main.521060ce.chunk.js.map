{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","placeholder","value","onChange","target","getGifs","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","setimages","useEffect","then","GifExpertApp","Categories","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAe,SAAAS,GAAQ,OAAKP,GAAL,mBAAqBO,OAC5CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,YAAY,2CACZC,MAASV,EACTW,SApBc,SAACR,GACvBF,EAAeE,EAAES,OAAOF,a,+BCRnBG,EAAO,uCAAG,WAAQN,GAAR,uBAAAO,EAAA,6DACbC,EADa,iDACoCC,UAAWT,GAD/C,+DAEKU,MAAMF,GAFX,cAEbG,EAFa,gBAGEA,EAAUC,OAHZ,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,8BAAIA,EAAJ,WCJCO,EAAU,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAAe,EAETR,mBAAS,IAFA,mBAE9B2B,EAF8B,KAEtBO,EAFsB,KAYrC,OARAC,qBAAW,WACPrB,EAASN,GAAW4B,KAAKF,KAC1B,CAAC1B,IAOA,gCACI,+BAAKA,EAAL,OACA,qBAAKsB,UAAU,YAAf,SAEQH,EAAOJ,KAAM,SAAAC,GAAG,OACZ,cAAC,EAAD,eAESA,GADEA,EAAIC,aCnB1BY,EAAe,WAAM,MAIMrC,mBAAS,CAAC,gBAJhB,mBAIvBsC,EAJuB,KAIXvC,EAJW,KAW9B,OACI,gCACI,+DACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEQuC,EAAWf,KAAK,SAAAf,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADJA,Y,MCnBpC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.521060ce.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault(); //Esta línea previene el refresh automático de los form\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories( category => [inputValue , ...category] );\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Introduce el tema a buscar y pulsa Enter\"\r\n                value = {inputValue}\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n//Utilizamos proptypes para que sea obligatorio mandar la función\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category) }&limit=10&api_key=hA1gBV6NIKPoqcdLx9yuJHGb6BUj4VWg`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map(img=> {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    } );\r\n\r\n    /* console.log(gifs); */\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    /* console.log(id, title, url); */\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title} />\r\n            <p>{title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState , useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const [images, setimages] = useState([]);\r\n\r\n    useEffect( () => {\r\n        getGifs( category ).then(setimages);\r\n    }, [category] )\r\n\r\n    \r\n\r\n    //getGifs();\r\n\r\n    return (\r\n        <div>\r\n            <h3>{category} </h3>\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map ( img => (\r\n                        <GifGridItem\r\n                            key = {img.id}\r\n                            { ...img }\r\n                        />\r\n                    ) )\r\n                }\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One punch','Samurai X','Dragon Ball'];\r\n\r\n    const [Categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    /* const handleAdd = () => {\r\n        setCategories( [...Categories,'HunterXHunter'] );\r\n        }\r\n     */\r\n\r\n    return (\r\n        <div>\r\n            <h2>Giphy API Consumer with React</h2>\r\n            <AddCategory setCategories = {setCategories} />\r\n            <hr></hr>\r\n            \r\n            <ol>\r\n                {\r\n                    Categories.map( category => (\r\n                        <GifGrid \r\n                            key =  {category}\r\n                            category = {category} \r\n                        />\r\n                     ) \r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}